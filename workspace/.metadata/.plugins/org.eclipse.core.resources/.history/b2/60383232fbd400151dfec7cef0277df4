import java.util.*;
public class MyPriorityQueue<T extends Comparable <? super T>> {
	dHeap<T> thisHeap;
	T[] track;
	int iTrack, size;
	public MyPriorityQueue(int initialSize){
		thisHeap = new dHeap(initialSize);
		track = (T[])new Comparable[initialSize];
	}
	public boolean add(T data){
		size++;
		if(data == null){
			throw new NullPointerException();
			
		}
		int counter = 0;
		for(int i = 0; i < size; i++){
			if(track[i].compareTo(data) == 0){
				counter++;
			}
		} 
		track[iTrack] = data;
		iTrack++;
		if(counter >= 1){return false;}
		else{
		thisHeap.add(data);
		return true;
		}
	}
	public T poll(){
		size--;
		if(thisHeap.size() == 0){
			return null;
		}
		return thisHeap.removeSmallest();
	}

}
